<?php

/**
 * Test class for Application_Model_Flower.
 * Generated by PHPUnit on 2012-07-23 at 12:21:28.
 */
class Application_Model_FlowerTest extends ControllerTestCase
{

	/**
	 * @var Application_Model_Flower
	 */
	protected $object;

	/**
	 * @var array
	 */
	protected $data = array(
		'id'		 => 1,
		'position_x' => 123.3,
		'position_y' => 323.9,
		'status'	 => 1,
		'modified'   => '2012-06-25 20:55:48',
		'created'	=> '2012-06-25 20:55:48'
	);

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		parent::setUp();
		$this->object = new Application_Model_Flower($this->data);
	}

	public function testCanCreateFlowerObject()
	{
		$this->assertInstanceOf('Standard_Model_Abstract', $this->object);
		$this->assertInstanceOf('Application_Model_Flower', $this->object);
	}

	public function testFlowerHasAttributes()
	{
		$this->assertObjectHasAttribute('_id', $this->object);
		$this->assertObjectHasAttribute('_position_x', $this->object);
		$this->assertObjectHasAttribute('_position_y', $this->object);
		$this->assertObjectHasAttribute('_status', $this->object);
		$this->assertObjectHasAttribute('_modified', $this->object);
		$this->assertObjectHasAttribute('_created', $this->object);
		$this->assertObjectHasAttribute('_mapper', $this->object);
	}

	public function testCanGetMapper()
	{
		$this->assertInstanceOf('Application_Model_FlowerMapper', $this->object->getMapper());
	}

	public function testCanGetAttributes()
	{
		$this->assertEquals($this->data['id'], $this->object->getId());
		$this->assertEquals($this->data['position_x'], $this->object->getPosition_x());
		$this->assertEquals($this->data['position_y'], $this->object->getPosition_y());
		$this->assertEquals($this->data['status'], $this->object->getStatus());
		$this->assertEquals($this->data['modified'], $this->object->getModified());
		$this->assertEquals($this->data['created'], $this->object->getCreated());
	}

	public function testCanSetAttributes()
	{
		$data = array(
			'id'		 => 5,
			'position_x' => 234.6,
			'position_y' => 231.3,
			'status'	 => 10,
			'modified'   => '2012-07-25 20:55:48',
			'created'	=> '2012-09-25 20:55:48',
		);
		$this->object->setId($data['id'])
			->setPosition_x($data['position_x'])
			->setPosition_y($data['position_y'])
			->setStatus($data['status'])
			->setModified($data['modified'])
			->setCreated($data['created']);
		$this->assertEquals($data['id'], $this->object->getId());
		$this->assertEquals($data['position_x'], $this->object->getPosition_x());
		$this->assertEquals($data['position_y'], $this->object->getPosition_y());
		$this->assertEquals($data['status'], $this->object->getStatus());
		$this->assertEquals($data['modified'], $this->object->getModified());
		$this->assertEquals($data['created'], $this->object->getCreated());
	}

}

?>
